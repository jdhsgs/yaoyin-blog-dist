(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{650:function(t,s,a){"use strict";a.r(s);var e=a(10),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"环形链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环形链表"}},[t._v("#")]),t._v(" 环形链表")]),t._v(" "),a("p",[t._v("题意： 给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。")]),t._v(" "),a("p",[t._v("为了表示给定链表中的环，使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。")]),t._v(" "),a("h2",{attrs:{id:"思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路：")]),t._v(" "),a("p",[t._v("第一步：判断是否有环，使用两个指针，fast，slow，fast一次走两步，slow一次走一步，如果fast和slow相遇则代表有环\n第二步：从头节点出发第三个指针，每次一格，当带三个指针与slow相等时，为环的开始节点")])])}),[],!1,null,null,null);s.default=r.exports}}]);